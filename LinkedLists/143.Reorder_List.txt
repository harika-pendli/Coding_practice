# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def reorderList(self, head):
        """
        :type head: ListNode
        :rtype: None Do not return anything, modify head in-place instead.
        """
        
        
        curr = head
        node_list = []
        dummy = ListNode()
        t = dummy
        slow,fast = head, head
        
        slow, fast = head, head.next
        while fast and fast.next:
            slow = slow.next
            fast = fast.next.next
        

        prev = None
        curr = slow
        while(curr):
            temp_n = curr.next
            curr.next  = prev
            prev = curr
            curr = temp_n

        L,R = head,prev
        
        first, second = head, prev
        
        while second:
            tmp1, tmp2 = first.next, second.next
            first.next = second
            second.next = tmp1
            first, second = tmp1, tmp2

        return head
        